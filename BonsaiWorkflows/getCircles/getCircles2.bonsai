<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.3.0">
  <Workflow xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:q1="clr-namespace:Bonsai.uEye;assembly=Bonsai.uEye" xmlns:q2="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision" xmlns:q3="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp" xmlns:q4="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input" xmlns:q5="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting" xmlns:q6="clr-namespace:Bonsai.IO;assembly=Bonsai.System" xmlns="https://horizongir.org/bonsai">
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q1:uEyeCapture">
          <q1:DeviceId xsi:nil="true" />
          <q1:ConfigFile>2048x1280_30fps_slowClock_4.9.ini</q1:ConfigFile>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Image</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:BackgroundSubtraction">
          <q2:BackgroundFrames>120</q2:BackgroundFrames>
          <q2:AdaptationRate>0.001</q2:AdaptationRate>
          <q2:ThresholdValue>0</q2:ThresholdValue>
          <q2:ThresholdType>ToZero</q2:ThresholdType>
          <q2:SubtractionMethod>Dark</q2:SubtractionMethod>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Threshold">
          <q2:ThresholdValue>18</q2:ThresholdValue>
          <q2:MaxValue>255</q2:MaxValue>
          <q2:ThresholdType>Binary</q2:ThresholdType>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:Grayscale" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="Take">
          <Count>1</Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="CombineLatest" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q2:HoughCircles">
          <q2:AccumulatorFactor>6</q2:AccumulatorFactor>
          <q2:MinDistance>380</q2:MinDistance>
          <q2:Param1>50</q2:Param1>
          <q2:Param2>100</q2:Param2>
          <q2:MinRadius>180</q2:MinRadius>
          <q2:MaxRadius>200</q2:MaxRadius>
        </Combinator>
      </Expression>
      <Expression xsi:type="ExternalizedPropertyOfBooleanBooleanProperty">
        <MemberName>Value</MemberName>
        <Name>Value</Name>
        <Value>false</Value>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q3:RunningAverage">
          <q3:Alpha>0.05</q3:Alpha>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q4:KeyDown">
          <q4:Filter>A</q4:Filter>
        </Combinator>
      </Expression>
      <Expression xsi:type="SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="ToList" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Take">
                <Count>15</Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="q5:PythonTransform">
              <q5:Script>from System import Tuple
@returns(Tuple[int,int,int,int,int,int])
def process(value):

  xc= int(value.Center.X)
  yc= int(value.Center.Y)
  r = int(value.Radius)
  x = xc-(r+2)
  y = yc-(r+2)
  wh=(r+2)*2

  return Tuple.Create(x,y,wh,xc,yc,r)</q5:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Concat" />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="ExternalizedPropertyOfInt32Take">
              <MemberName>Count</MemberName>
              <Name>Count</Name>
              <Value>15</Value>
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Length</Selector>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>5</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>4</From>
              <To>7</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>6</From>
              <To>1</To>
              <Label>Source2</Label>
            </Edge>
            <Edge>
              <From>7</From>
              <To>6</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item2</Selector>
            </Expression>
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Item1</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="BooleanProperty">
          <Value>false</Value>
        </Combinator>
      </Expression>
      <Expression xsi:type="Condition">
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item2</Selector>
            </Expression>
            <Expression xsi:type="BitwiseNot" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>2</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>3</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Source.Item1</Selector>
      </Expression>
      <Expression xsi:type="Equal">
        <Operand xsi:type="WorkflowPropertyOfKeys">
          <Value>A</Value>
        </Operand>
      </Expression>
      <Expression xsi:type="SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Concat" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Source.Item1</Selector>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="q6:TextWriter">
          <q6:FileName>E:\00_bonsai_ffmpeg_out\ROIdef.csv</q6:FileName>
          <q6:Suffix>Timestamp</q6:Suffix>
          <q6:Buffered>true</q6:Buffered>
          <q6:Overwrite>false</q6:Overwrite>
          <q6:Append>true</q6:Append>
        </Combinator>
      </Expression>
      <Expression xsi:type="q5:PythonTransform">
        <q5:Script>import clr
from System import Array, Single, Random,Tuple

@returns(str)
def process(value):
  allwells=[]

  x = value.Item1
  y=value.Item2
  wh=value.Item3
  xc=value.Item4
  yc=value.Item5
  r=value.Item6

  welldata = (x, y, wh,xc,yc,r)
  wellstr = "%i %i %i %i %i %i" % welldata
  allwells.append(wellstr)
  return " ".join(allwells)</q5:Script>
      </Expression>
      <Expression xsi:type="q5:PythonTransform">
        <q5:Script>from System import Tuple
from System.Collections.Generic import IList

@returns(IList[Tuple[int,int,int,int,int,int]])
def process(value):

  tupAll=[]
  tupRoundAll=[]
  for c in value:
    x=c.Item1
    xr=(x/100)*100
    y=c.Item2
    yr=(y/100)*100
    w=c.Item3
    xc=c.Item4
    yc=c.Item5
    r=c.Item6
    
    tupAll.append((x,y,w,xc,yc,r))
    tupRoundAll.append((yr,xr))
  
  so=[i[0] for i in sorted(enumerate(tupRoundAll), key=lambda x:x[1])]

  s=[tupAll[i] for i in so]

  return [Tuple.Create(x[0],x[1],x[2],x[3],x[4],x[5]) for x in s]</q5:Script>
      </Expression>
      <Expression xsi:type="SelectMany">
        <Workflow>
          <Nodes>
            <Expression xsi:type="q5:PythonTransform">
              <q5:Script>from System import Tuple
@returns(Tuple[int,int])
def process(value):

  x = int(value.Item1)
  y = int(value.Item2)

  return Tuple.Create(x,y)</q5:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="Concat" />
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge>
              <From>0</From>
              <To>3</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>1</From>
              <To>0</To>
              <Label>Source1</Label>
            </Edge>
            <Edge>
              <From>2</From>
              <To>1</To>
              <Label>Source1</Label>
            </Edge>
          </Edges>
        </Workflow>
      </Expression>
    </Nodes>
    <Edges>
      <Edge>
        <From>0</From>
        <To>2</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>16</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>1</From>
        <To>13</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>2</From>
        <To>1</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>3</From>
        <To>4</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>4</From>
        <To>7</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>5</From>
        <To>10</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>6</From>
        <To>19</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>7</From>
        <To>6</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>8</From>
        <To>12</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>9</From>
        <To>15</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>10</From>
        <To>8</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>11</From>
        <To>18</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>12</From>
        <To>22</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>13</From>
        <To>14</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>14</From>
        <To>3</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>15</From>
        <To>1</To>
        <Label>Source2</Label>
      </Edge>
      <Edge>
        <From>16</From>
        <To>17</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>17</From>
        <To>5</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>18</From>
        <To>9</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>19</From>
        <To>21</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>21</From>
        <To>20</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>22</From>
        <To>7</To>
        <Label>Source1</Label>
      </Edge>
      <Edge>
        <From>22</From>
        <To>23</To>
        <Label>Source1</Label>
      </Edge>
    </Edges>
  </Workflow>
  <ExtensionTypes>
    <Type>Bonsai.uEye.uEyeCapture, Bonsai.uEye, Version=2.1.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.CombineLatest, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.BackgroundSubtraction, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Threshold, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.Grayscale, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Take, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Vision.HoughCircles, Bonsai.Vision, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Expressions.BooleanProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Dsp.RunningAverage, Bonsai.Dsp, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Windows.Input.KeyDown, Bonsai.Windows.Input, Version=2.2.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.ToList, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Scripting.PythonTransform, Bonsai.Scripting, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Reactive.Concat, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.ExternalizedProperty`2[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Bonsai.Reactive.Take, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.BooleanProperty, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.BitwiseNotBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.EqualBuilder, Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.Expressions.WorkflowProperty`1[[System.Windows.Forms.Keys, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], Bonsai.Core, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
    <Type>Bonsai.IO.TextWriter, Bonsai.System, Version=2.3.0.0, Culture=neutral, PublicKeyToken=null</Type>
  </ExtensionTypes>
</WorkflowBuilder>